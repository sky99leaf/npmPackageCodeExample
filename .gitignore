# updated 04-08-2024a
*bundle*.js
# for image reducer
trash*.jpeg

node_modules*
package-lock.json

# so visual studio shows different fonts desktop vs laptop
**/.vscode/settings.json

# keystore file:
*.p12

# config files for visual studio code. Different screens want different fonts
.vscode/

# dont save anything gradle except build.gradle, the file for the project. Other files are for running gradle.
# excludes .gradle folder having gradle setup and code.
.gradle/
# exclude anything in any build folder in any location, but keep build folder using .gitkeep
*/build/**
build

# file holding docker or devel box or any other secret. Exclude it!
*/secrets/**
# this may be for secrets at level where git push is run?
secrets/**

# .idea is the intellij folder containing project editor state, setting which dont belong in git
*.idea/
# config files used by eclipse dont belong in git
.settings/ 
.project/
workspace.xml

# exclude files used by mysql because takes lots of space.
# If data needed, use phpmyadmin to export to a file.
*mySqlWorkDir/**
mySqlWorkDir
mySqlWorkDir*
mySqlWorkDir.*

# snap is a linux install thing. Comment out in case something else is a 'snap'
# snap
# snap*

# NOTE: after removing or adding an entry from this file, 
# must remove local cache with "git rm -r --cached ."
# All this does is undo "git add ." and does not remove files
# despite the scary messages from it (I HOPE)
# "git rm -r --cached ."

######### original .gitignore below. Above is my additions
## this .gitignore was setup by github when I created a new
##    repository and chose "nodejs" as the .gitignore example

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
